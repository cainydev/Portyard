services:
    # ---------- Traefik reverse proxy ----------
    traefik:
        container_name: portyard-traefik
        image: traefik:v3.4
        ports:
            - "80:80"
            - "443:443"
            - "8080:8080"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
            - "./traefik:/etc/traefik" # Traefik config + TLS certs
            - "letsencrypt:/letsencrypt" # Let's Encrypt storage (prod)
        networks:
            - sail
        command:
            - "--configFile=/etc/traefik/traefik.dev.yml"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.dashboard.rule=Host(`traefik.${APP_DOMAIN:-portyard.local}`)"
            - "traefik.http.routers.dashboard.service=api@internal"
            - "traefik.http.routers.dashboard.entrypoints=websecure"
            - "traefik.http.routers.dashboard.tls=true"

    # ---------- Laravel web ui ----------
    laravel:
        container_name: portyard-laravel
        build:
            context: ./vendor/laravel/sail/runtimes/8.4
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.4/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
            XDG_CONFIG_HOME: "/var/www/html/config"
            XDG_DATA_HOME: "/var/www/html/data"
        ports:
            - "5173:5173"
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.laravel.rule=Host(`${APP_DOMAIN:-portyard.local}`)"
            - "traefik.http.routers.laravel.entrypoints=websecure"
            - "traefik.http.routers.laravel.tls=true"
            - "traefik.http.routers.laravel.service=laravel-web"
            - "traefik.http.services.laravel-web.loadbalancer.server.port=80"


    # ---------- MySQL database ----------
    mysql:
        container_name: portyard-mysql
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'portyard-mysql:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test: 'CMD mysqladmin ping -p${DB_PASSWORD}'
            retries: 3
            timeout: 5s

    # ---------- Valkey storage ----------
    valkey:
        container_name: portyard-valkey
        image: 'valkey/valkey:alpine'
        ports:
            - '${FORWARD_VALKEY_PORT:-6379}:6379'
        volumes:
            - 'portyard-valkey:/data'
        networks:
            - sail
        healthcheck:
            test: 'CMD valkey-cli ping'
            retries: 3
            timeout: 5s

    # ---------- CNCF Container registry ----------
    registry:
        container_name: portyard-registry
        image: registry:2
        ports:
            - "5000:5000"
            - "5001:5001"
        #environment:
            #REGISTRY_STORAGE_S3_ACCESSKEY: '${HETZNER_S3_ACCESS_KEY}'
            #REGISTRY_STORAGE_S3_SECRETKEY: '${HETZNER_S3_SECRET_KEY}'
            #REGISTRY_STORAGE_S3_REGIONENDPOINT: '${HETZNER_S3_ENDPOINT}'
            #REGISTRY_STORAGE_S3_REGION: '${HETZNER_S3_REGION}'
            #REGISTRY_STORAGE_S3_BUCKET: '${HETZNER_S3_BUCKET}'
        networks:
            - sail
        volumes:
            - portyard-registry:/var/lib/registry
            - ./registry.yml:/etc/docker/registry/config.yml
            - ./certs/public/:/root/certs/
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.registry.rule=Host(`${APP_DOMAIN:-portyard.local}`) && PathPrefix(`/v2/`)"
            - "traefik.http.routers.registry.entrypoints=websecure"
            - "traefik.http.routers.registry.tls=true"
            - "traefik.http.services.registry.loadbalancer.server.port=5000"

networks:
    sail:
        driver: bridge

volumes:
    portyard-mysql:
        driver: local
    portyard-valkey:
        driver: local
    portyard-registry:
        driver: local
    letsencrypt:
        driver: local
